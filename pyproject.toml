[build-system]
requires = ['poetry-core>=1.2.0', 'wheel',]
build-backend = 'poetry.core.masonry.api'


[tool.coverage.run]
branch = true
relative_files = true
omit = [
    '.tox/*',
    'tests/*',
]


[tool.flake8]
max-line-length = 120
extend-ignore = 'E303,'  # https://www.flake8rules.com/
max-complexity = 15  # Info: https://en.wikipedia.org/wiki/Cyclomatic_complexity
per-file-ignores = """\
# F401: Ignore "unused" imports
# F403: Ignore star imports
# F405: Ignore names from star imports
# E303: Ignore too many blank lines
__init__.py:F401,F403,F405 \
game.py:F401 \
"""
exclude = [
    'example',
    'main_tf2.py',
]


[tool.poetry]
name = 'rl_car'
version = '0.2.0'
description = "A template Poetry project structure."

authors = ["Lari Liuhamo <lari.liuhamo+pypi@gmail.com>",]
maintainers = ["Lari Liuhamo <lari.liuhamo+pypi@gmail.com>",]

include = ['CHANGELOG.md', 'LICENSE',]
license = 'MIT'
readme = 'README.md'

homepage = 'https://pypi.org/project/rl_car/'
repository = 'https://github.com/Diapolo10/rl_car'
documentation = 'https://github.com/Diapolo10/rl_car/tree/main/docs'

keywords = [
    'python3',
]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Education',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: MIT License',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Topic :: Education',
    'Topic :: Games/Entertainment :: Arcade',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Scientific/Engineering :: Visualization',
    'Typing :: Typed',
]


[tool.poetry.dependencies]
python = '^3.8.1,<3.11'
arcade = '^2.6.17'
grpcio = '^1.59.3'
numpy = '^1.24.0'
shapely = '^2.0.2'
torch = '^2.1.1'
tensorflow = '~2.11.0'  # Last known version with Windows support
tensorflow-io-gcs-filesystem = '~0.34.0'  # Ditto


[tool.poetry.group.dev.dependencies]
mypy = '^1.7.1'


[tool.poetry.group.linters]
optional = true


[tool.poetry.group.linters.dependencies]
ruff = '^0.1.5'


[tool.poetry.group.tests]
optional = true


[tool.poetry.group.tests.dependencies]
pytest = '^7.4.3'
pytest-cov = '^4.1.0'
tox = '^4.11.3'
tox-gh-actions = '^3.1.1'


[tool.poetry.urls]
"Source code" = 'https://github.com/Diapolo10/rl_car'
"Tracker" = 'https://github.com/Diapolo10/rl_car/issues'
"Changelog" = 'https://github.com/Diapolo10/rl_car/blob/main/CHANGELOG.md'


[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
--doctest-modules \
--cov=./ \
--cov-append \
--cov-report html:tests/reports/coverage-html \
--cov-report xml:tests/reports/coverage.xml \
--ignore=docs/
"""
testpaths = [
    'tests',
]


[tool.ruff]
select = [
    'A',   # Builtins
    'ANN', # Annotations
    'ARG', # Unused arguments
    'B',   # Bugbear
    'BLE', # Blind except
    'C4',  # Comprehensions
    'C90', # mccabe
    'COM', # Commas
    'DTZ', # Datetimes
    'ERA', # Commented-out code
    'EXE', # Executable
    'G',   # Logging format
    'I',   # Isort
    'ICN', # Import conventions
    'INP', # Disallow PEP-420 (Implicit namespace packages)
    'INT', # gettext
    'ISC', # Implicit str concat
    'N',   # PEP-8 Naming
    'NPY', # Numpy
    'PGH', # Pygrep hooks
    'PIE', # Unnecessary code
    'PL',  # Pylint
    'PT',  # Pytest
    'PTH', # Use Pathlib
    'PYI', # Stub files
    'RET', # Return
    'RUF', # Ruff
    'RSE', # Raise
    'S',   # Bandit
    'SIM', # Code simplification
    'SLF', # Private member access
    'T20', # Print
    'TCH', # Type checking
    'TID', # Tidy imports
    'UP',  # Pyupgrade
    'W',   # Warnings
    'YTT', # sys.version
]
ignore = [
    'PLR0913',  # Too many arguments
]
ignore-init-module-imports = true
line-length = 120


[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.ruff.per-file-ignores]
# https://beta.ruff.rs/docs/rules/
'__init__.py' = ['F401','F403','F405',]
'tests/*' = ['ANN001', 'ANN201', 'ARG', 'S101',]


[tool.ruff.pylint]
max-args = 15
max-branches = 20
max-returns = 10
max-statements = 80


[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, pypy3
isolated_build = True

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    pypy-3.9: pypy3

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
passenv = GITHUB_*
deps =
    coverage
    pytest
    pytest-cov
commands =
    coverage run -m pytest
"""
